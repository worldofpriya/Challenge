@model ShoeSwap.Models.ShoeSwapInfo

@{
    ViewBag.Title = "ShoeSwap";
}

<script src="http://maps.google.com/maps/api/js?sensor=false">
</script>
<script>

    function getLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(showCurrentLocation);
        }
        else {
            alert("Geolocation API not supported.");
        }
    }

    function showCurrentLocation(position) {
        var latitude = position.coords.latitude;
        var longitude = position.coords.longitude;
        var coords = new google.maps.LatLng(latitude, longitude);

        var mapOptions = {
            zoom: 15,
            center: coords,
            mapTypeControl: true,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };

        //create the map, and place it in the HTML map div
        map = new google.maps.Map(
        document.getElementById("mapPlaceholder"), mapOptions
        );

        //place the initial marker
        var marker = new google.maps.Marker({
            position: coords,
            map: map,
            title: "Current location!"
        });
    }
</script>



<h2>ShoeSwap</h2>
@using (Html.BeginForm())
{
    <fieldset>
        <div class="editor-label">
            @Html.LabelFor(model => model.ShoeColor)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.ShoeColor)
        </div>
        <input type="submit" value="Submit Shoe" />
        <input value="Display" onclick="getLocation();"/>
    </fieldset>
    
    
   
}
