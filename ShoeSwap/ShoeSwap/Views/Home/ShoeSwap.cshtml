@*@model ShoeSwap.Models.ShoeSwapInfo

@{
    ViewBag.Title = "ShoeSwap";
}

<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=true"></script>
<script>

    function getLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(showCurrentLocation);
        }
        else {
            alert("Geolocation API not supported.");
        }
    }

    function showCurrentLocation(position) {

        var mapcanvas = document.createElement('div');
        mapcanvas.id = 'mapcontainer';
        mapcanvas.style.height = '400px';
        mapcanvas.style.width = '600px';

        var latitude = position.coords.latitude;
        var longitude = position.coords.longitude;

        var locations =
       [
           ['-13.530825', '-71.957567'],
           ['-13.531211', '-71.923693']
           //[lattitude, longitude]
       ];

        
        for (i = 0; i < locations.length; i++)
        {
                var coords = new google.maps.LatLng(locations[i][0], locations[i][1]);

                var mapOptions = {
                    zoom: 15,
                    center: coords,
                    mapTypeControl: true,
                    mapTypeId: google.maps.MapTypeId.ROADMAP
                };

                //create the map, and place it in the HTML map div
                map = new google.maps.Map(
                document.getElementById("mapcontainer"), mapOptions
                );

                //place the initial marker
                var marker = new google.maps.Marker({
                    position: coords,
                    map: map,
                    title: "My location!"
                });
        }
        return[longitude, latitude];
    }
</script>



<h2>ShoeSwap</h2>
<input type="hidden" id="mapPlaceholder"/>
@using (Html.BeginForm("ShoeSwap","Home"))
{
    <fieldset>
        <div class="editor-label">
            @Html.LabelFor(model => model.ShoeColor)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.ShoeColor)
        </div>
        <button onclick="getLocation();">Find Shoes</button>
        

        @*<input type="submit" value="Submit Shoe"/>*@
        
@model ShoeSwap.Models.ShoeSwapInfo

@{
    ViewBag.Title = "ShoeSwap";
}

<section id="wrapper">
    @using (Html.BeginForm("ShoeSwap","Home"))
{
        <fieldset>
            <div class="editor-label">
                @Html.LabelFor(model => model.ShoeColor)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.ShoeColor)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.ShoeSize)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.ShoeSize)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.ShoeType)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.ShoeType)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Email)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.Email)
            </div>
            
            <button onclick="getLocation();">Find Shoes</button>

            <div class="editor-label">
                @Html.LabelFor(model => model.Email)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.Email)
            </div>
            <button onclick="getshoe();">Swap</button>
            
            </fieldset>

}
            @*<input type="submit" value="Submit Shoe"/>*@
            Click the allow button to let the browser find your location.

            <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=true"></script>
            <article></article>
    <script>
        function getshoe() {
            alert('Email sent');
        }

        function getLocation() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(success);
            }
            else {
                alert("Geolocation API not supported.");
            }
        }
        function success(position) {
            
            var mapcanvas = document.createElement('div');
            mapcanvas.id = 'mapcontainer';
            mapcanvas.style.height = '400px';
            mapcanvas.style.width = '600px';

            document.querySelector('article').appendChild(mapcanvas);

            var locations = [[position.coords.latitude, position.coords.longitude], [29.9025151, -97.08877939999998], [30.9025050, -97.08877939999997]];
            
            var shoeinfo = [["Pink", "flipflops", 8], ["Blue", "sneakers", 5], ["Red", "highheels", 11]];
            var coords = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);

            var options = {
                zoom: 1,
                center: new google.maps.LatLng(0, 0),
                mapTypeControl: false,
                navigationControlOptions: {
                    style: google.maps.NavigationControlStyle.SMALL
                },
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };
            var map = new google.maps.Map(document.getElementById("mapcontainer"), options);

            for (i = 0; i < locations.length; i++)
            {
                var coords = new google.maps.LatLng(locations[i][0], locations[i][1]);
                var marker = new google.maps.Marker({
                    position: coords,
                    map: map,
                    title: shoeinfo[i][0] + ' ' + shoeinfo[i][1] + ' ' + 'size:' +shoeinfo[i][2]
                });
                
            }
        }

        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(success);
        } else {
            error('Geo Location is not supported');
        }

    </script>
</section>